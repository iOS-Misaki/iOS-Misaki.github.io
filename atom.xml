<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Misaki的小站</title>
  
  <subtitle>Stay Hungry, Stay Foolish</subtitle>
  <link href="/iOS-Misaki.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/iOS-Misaki/iOS-Misaki.github.io/"/>
  <updated>2018-07-26T14:58:08.355Z</updated>
  <id>https://github.com/iOS-Misaki/iOS-Misaki.github.io/</id>
  
  <author>
    <name>Misaki</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CAAnimation 系列动画</title>
    <link href="https://github.com/iOS-Misaki/iOS-Misaki.github.io/2018/07/26/CAAnimation%20%E7%B3%BB%E5%88%97%E5%8A%A8%E7%94%BB/"/>
    <id>https://github.com/iOS-Misaki/iOS-Misaki.github.io/2018/07/26/CAAnimation 系列动画/</id>
    <published>2018-07-26T02:20:39.000Z</published>
    <updated>2018-07-26T14:58:08.355Z</updated>
    
    <content type="html"><![CDATA[<p>&ensp;&ensp;&ensp;&ensp;有人问我为什么要写博客，必须要承认，现在网上一大推的优秀教程和现成的Demo，自己写的没有别人好，有些地方根本不够深入，但是看别人写文章、写代码和自己写完全是两件事，代码看看就能懂，但是自己过一遍，印象更深，消化的也就更彻底。对于iOS动画 ，一直都没有系统化的学习，只有用的时候才会查查api，之前写过一篇<a href="https://www.jianshu.com/p/92ac22afeeef" target="_blank" rel="noopener">红包雨</a>的文章，用的是关键帧动画，没有在继续下去。另一个就是在6月份面试的时候，有两个面试官都问到了基础动画，当时也回答的不好，现在详细地梳理一遍。现阶段，先把<code>Core Animation</code>弄清楚，以后再下沉到<code>OpenGL</code>和<code>CoreGraphics</code>。</p><a id="more"></a><h2 id="CAAnimation继承关系"><a href="#CAAnimation继承关系" class="headerlink" title="CAAnimation继承关系"></a>CAAnimation继承关系</h2><p>&ensp;&ensp;&ensp;&ensp;引用官方文档：</p><blockquote><p>Core Animation provides high frame rates and smooth animations without burdening the CPU and slowing down your app. Most of the work required to draw each frame of an animation is done for you. You configure animation parameters such as the start and end points, and Core Animation does the rest, handing off most of the work to dedicated graphics hardware, to accelerate rendering. For more details, see <a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/CoreAnimation_guide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40004514" target="_blank" rel="noopener">Core Animation Programming Guide</a>.</p></blockquote><p>&ensp;&ensp;&ensp;&ensp;<code>Core Animation</code>提供了高帧率和流畅的动画，而不会加重CPU负担，也不会减慢应用程序的速度。你可以配置动画参数，如起始点和结束点，<code>Core animation</code>完成其余部分，将大部分工作交给专用的图形硬件，以加速渲染。</p><p><img src="https://upload-images.jianshu.io/upload_images/1487718-98d399ad7b624a91.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="CAAnimation类图.jpg"></p><p>&ensp;&ensp;&ensp;&ensp;对于<code>CAAnimation</code>,是核心动画基础类，不直接使用，一般用它的子类。<code>CAAnimation</code>有三个子类<code>CAPropertyAnimation、CATransition、CAAnimationGroup</code>。第二个<code>CATransition</code>是转场动画，第三个<code>CAAnimationGroup</code>是动画组。第一个<code>CAPropertyAnimation</code>又分为两个子类<code>CABasicAnimation、CAKeyframeAnimation</code>。<code>CAKeyframeAnimation</code>是关键帧动画。<code>CABasicAnimation</code>下面还有个子类<code>CASpringAnimation</code>是弹簧动画。</p><p>&ensp;&ensp;&ensp;&ensp;<code>CAPropertyAnimation</code>通过<code>animationWithKeyPath</code>来创建动画，可以看看有哪些属性可以创建动画。详见<a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CoreAnimation_guide/AnimatableProperties/AnimatableProperties.html#//apple_ref/doc/uid/TP40004514-CH11-SW2" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">anchorPoint</span><br><span class="line">backgroundColor</span><br><span class="line">backgroundFilters</span><br><span class="line">borderColor</span><br><span class="line">borderWidth</span><br><span class="line">bounds</span><br><span class="line">compositingFilter</span><br><span class="line">contents</span><br><span class="line">contentsRect</span><br><span class="line">cornerRadius</span><br><span class="line">doubleSided</span><br><span class="line">filters</span><br><span class="line">frame</span><br><span class="line">hidden</span><br><span class="line">mask</span><br><span class="line">masksToBounds</span><br><span class="line">opacity</span><br><span class="line">position</span><br><span class="line">shadowColor</span><br><span class="line">shadowOffset</span><br><span class="line">shadowOpacity</span><br><span class="line">shadowPath</span><br><span class="line">shadowRadius</span><br><span class="line">sublayers</span><br><span class="line">sublayerTransform</span><br><span class="line">transform</span><br><span class="line">zPosition</span><br></pre></td></tr></table></figure><hr><h2 id="CAKeyframeAnimation-关键帧动画"><a href="#CAKeyframeAnimation-关键帧动画" class="headerlink" title="CAKeyframeAnimation 关键帧动画"></a>CAKeyframeAnimation 关键帧动画</h2><p>&ensp;&ensp;&ensp;&ensp;可以使用继承的<code>animationWithKeyPath:</code>方法创建一个<code>CAKeyframeAnimation</code>对象，并指定要在层上动画的属性的关键路径。然后可以指定用于控制时间和动画行为的关键帧值。对于大多数动画类型，可以使用值和<code>keyTimes</code>属性指定关键帧值。在动画期间，<code>Core animation</code>通过在您提供的值之间插入来生成中间值。当动画一个坐标点(例如layer的位置)的值时，你可以指定该点的路径，而不是单独的值。动画的节奏由你提供的时间信息控制。</p><h3 id="重要属性"><a href="#重要属性" class="headerlink" title="重要属性"></a>重要属性</h3><table><thead><tr><th>属性</th><th style="text-align:center">描述 </th></tr></thead><tbody><tr><td>values</td><td style="text-align:center">用来存放关键帧的数组</td></tr><tr><td>path</td><td style="text-align:center">基于点的属性的路径。</td></tr><tr><td>keyTimes</td><td style="text-align:center">对应关键帧段的时间点的NSNumber数组</td></tr><tr><td>timingFunctions</td><td style="text-align:center">关键帧动画节奏的数组，比如快进慢出、慢进快出等</td></tr><tr><td>calculationMode</td><td style="text-align:center">确定沿路径动画的对象是否旋转以匹配路径切线</td></tr><tr><td>tensionValues</td><td style="text-align:center">定义曲线的紧密性的NSNumber数组</td></tr><tr><td>continuityValues</td><td style="text-align:center">定义时间曲线锐角的NSNumber数组</td></tr><tr><td>biasValues</td><td style="text-align:center">定义曲线相对于控制点的位置的NSNumber数组</td></tr><tr><td>Rotation Mode Values</td><td style="text-align:center">rotationMode属性使用这些常量</td></tr><tr><td>Value calculation modes</td><td style="text-align:center">calculationMode属性使用这些常量</td></tr></tbody></table><h3 id="效果代码"><a href="#效果代码" class="headerlink" title="效果代码"></a>效果代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 指定keyPath为position，通过Values来创建关键帧动画</span><br><span class="line">- (void)CAKeyframeAnimationWithValues</span><br><span class="line">&#123;</span><br><span class="line">    CGFloat margin = 50.f;</span><br><span class="line"></span><br><span class="line">    CAKeyframeAnimation * animation = [CAKeyframeAnimation animation];</span><br><span class="line">    animation.keyPath = @&quot;position&quot;;</span><br><span class="line">    NSValue * value0 = [NSValue valueWithCGPoint:CGPointMake(margin, margin)];</span><br><span class="line">    NSValue * value1 = [NSValue valueWithCGPoint:CGPointMake(margin, SCREENHEIGHT - margin)];</span><br><span class="line">    NSValue * value2 = [NSValue valueWithCGPoint:CGPointMake(SCREENWIDTH - margin, SCREENHEIGHT - margin)];</span><br><span class="line">    NSValue * value3 = [NSValue valueWithCGPoint:CGPointMake(SCREENWIDTH - margin, margin)];</span><br><span class="line">    NSValue * value4 = [NSValue valueWithCGPoint:CGPointMake(margin, margin)];</span><br><span class="line">    animation.values = @[value0,value1,value2,value3,value4];</span><br><span class="line"></span><br><span class="line">    //当我们动画完成时,如果希望动画就自动移除的话,我们可以设置此属性为YES,默认值为YES</span><br><span class="line">    animation.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation.removedOnCompletion = NO;</span><br><span class="line">    animation.duration = 4;</span><br><span class="line">    animation.repeatCount = MAXFLOAT;</span><br><span class="line">    //快入快出</span><br><span class="line">    animation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];</span><br><span class="line">    [self.pointView.layer addAnimation:animation forKey:@&quot;position.values&quot;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 指定keyPath为position，通过path路径来创建关键帧动画</span><br><span class="line">- (void)CAKeyframeAnimationWithPath</span><br><span class="line">&#123;</span><br><span class="line">    CGFloat margin = 50.f;</span><br><span class="line"></span><br><span class="line">    CAKeyframeAnimation * animation = [CAKeyframeAnimation animation];</span><br><span class="line">    animation.keyPath = @&quot;position&quot;;</span><br><span class="line"></span><br><span class="line">    CGMutablePathRef path = CGPathCreateMutable();</span><br><span class="line">    CGPathAddRect(path, NULL, CGRectMake(margin, margin, SCREENWIDTH - margin * 2, SCREENHEIGHT - margin * 2));</span><br><span class="line">    animation.path = path;</span><br><span class="line">    CGPathRelease(path);</span><br><span class="line"></span><br><span class="line">    animation.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation.removedOnCompletion = NO;</span><br><span class="line">    animation.duration = 4;</span><br><span class="line">    animation.repeatCount = MAXFLOAT;</span><br><span class="line">    NSMutableArray * timingFunctionArray = [NSMutableArray new];</span><br><span class="line">    for (NSInteger i = 0 ; i &lt; 5 ; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        //每一段都是快出效果</span><br><span class="line">        CAMediaTimingFunction * timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseOut];</span><br><span class="line">        [timingFunctionArray addObject:timingFunction];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    animation.timingFunctions = timingFunctionArray;</span><br><span class="line">    [self.pointView.layer addAnimation:animation forKey:@&quot;position.path&quot;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://upload-images.jianshu.io/upload_images/1487718-9916176ef3035803.gif?imageMogr2/auto-orient/strip" alt="CAKeyframeAnimation.gif"></p><p>&ensp;&ensp;&ensp;&ensp;需要注意的是removedOnCompletion设置为NO的时候，不需要layer的时候要根据key手动移除动画。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[self.pointView.layer removeAnimationForKey:@&quot;position.values&quot;];</span><br><span class="line">[self.pointView.layer removeAnimationForKey:@&quot;position.path&quot;];</span><br></pre></td></tr></table></figure></p><hr><h2 id="CATransition-转场动画"><a href="#CATransition-转场动画" class="headerlink" title="CATransition 转场动画"></a>CATransition 转场动画</h2><p>&ensp;&ensp;&ensp;&ensp;<code>CATransition</code>的父类是<code>CAAnimation</code>，和<code>CAPropertyAnimation</code>、<code>CAAnimationGroup</code>同级。<code>CATransition</code>是用来视图的转场动画。</p><blockquote><p>You can transition between a layer’s states by creating and adding a <a href="apple-reference-documentation://hckyNQAwLg" target="_blank" rel="noopener">CATransition</a> object to it. The default transition is a cross fade, but you can specify different effects from a set of predefined transitions.</p></blockquote><h3 id="重要属性-1"><a href="#重要属性-1" class="headerlink" title="重要属性"></a>重要属性</h3><table><thead><tr><th>属性</th><th style="text-align:center">描述 </th></tr></thead><tbody><tr><td>startProgress</td><td style="text-align:center">整个变形接收的起点</td></tr><tr><td>endProgress</td><td style="text-align:center">整个变形接收的终点</td></tr><tr><td>type</td><td style="text-align:center">指定转换类型</td></tr><tr><td>subtype</td><td style="text-align:center">转换方向的子类型</td></tr><tr><td>filter</td><td style="text-align:center">提供转换的图像过滤器对象</td></tr><tr><td>Common Transition Types</td><td style="text-align:center">指定可以与type属性一起使用的转换类型的常量</td></tr><tr><td>Common Transition Subtypes</td><td style="text-align:center">指定可以与subtype属性一起使用的转换类型的常量</td></tr></tbody></table><h3 id="效果代码-1"><a href="#效果代码-1" class="headerlink" title="效果代码"></a>效果代码</h3><p>&ensp;&ensp;&ensp;&ensp;其中<code>type</code>和<code>subtype</code>有官方指定的类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/* Common transition types. */</span><br><span class="line"></span><br><span class="line">CA_EXTERN NSString * const kCATransitionFade</span><br><span class="line">CA_AVAILABLE_STARTING (10.5, 2.0, 9.0, 2.0);</span><br><span class="line">CA_EXTERN NSString * const kCATransitionMoveIn</span><br><span class="line">CA_AVAILABLE_STARTING (10.5, 2.0, 9.0, 2.0);</span><br><span class="line">CA_EXTERN NSString * const kCATransitionPush</span><br><span class="line">CA_AVAILABLE_STARTING (10.5, 2.0, 9.0, 2.0);</span><br><span class="line">CA_EXTERN NSString * const kCATransitionReveal</span><br><span class="line">CA_AVAILABLE_STARTING (10.5, 2.0, 9.0, 2.0);</span><br><span class="line"></span><br><span class="line">/* Common transition subtypes. */</span><br><span class="line"></span><br><span class="line">CA_EXTERN NSString * const kCATransitionFromRight</span><br><span class="line">CA_AVAILABLE_STARTING (10.5, 2.0, 9.0, 2.0);</span><br><span class="line">CA_EXTERN NSString * const kCATransitionFromLeft</span><br><span class="line">CA_AVAILABLE_STARTING (10.5, 2.0, 9.0, 2.0);</span><br><span class="line">CA_EXTERN NSString * const kCATransitionFromTop</span><br><span class="line">CA_AVAILABLE_STARTING (10.5, 2.0, 9.0, 2.0);</span><br><span class="line">CA_EXTERN NSString * const kCATransitionFromBottom</span><br><span class="line">CA_AVAILABLE_STARTING (10.5, 2.0, 9.0, 2.0);</span><br></pre></td></tr></table></figure></p><p>&ensp;&ensp;&ensp;&ensp;还有几种效果是私有API，在官方文档中找不到，<strong>慎用</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Cube,                     //立体</span><br><span class="line">SuckEffect,               //吮吸</span><br><span class="line">OglFlip,                  //翻转</span><br><span class="line">RippleEffect,             //波纹</span><br><span class="line">PageCurl,                 //翻页</span><br><span class="line">PageUnCurl,               //反翻页</span><br><span class="line">CameraIrisHollowOpen,     //开镜头</span><br><span class="line">CameraIrisHollowClose,    //关镜头</span><br></pre></td></tr></table></figure></p><p>&ensp;&ensp;&ensp;&ensp;这里写了一个例子，有12种<code>type</code>转场效果和4种<code>subtype</code>转场方向，用枚举来封装一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">typedef NS_ENUM(NSInteger,CATransactionType) &#123;</span><br><span class="line">    CATransactionType_Fade = 0,                 //默认</span><br><span class="line">    CATransactionType_MoveIn,                   //覆盖</span><br><span class="line">    CATransactionType_Push,                     //推入</span><br><span class="line">    CATransactionType_Reveal,                   //揭开</span><br><span class="line"></span><br><span class="line">    CATransactionType_Cube,                     //立体</span><br><span class="line">    CATransactionType_SuckEffect,               //吮吸</span><br><span class="line">    CATransactionType_OglFlip,                  //翻转</span><br><span class="line">    CATransactionType_RippleEffect,             //波纹</span><br><span class="line">    CATransactionType_PageCurl,                 //翻页</span><br><span class="line">    CATransactionType_PageUnCurl,               //反翻页</span><br><span class="line">    CATransactionType_CameraIrisHollowOpen,     //开镜头</span><br><span class="line">    CATransactionType_CameraIrisHollowClose,    //关镜头</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">- (void)CATransitionWithType:(NSString *)type WithSubtype:(NSString *)subtype</span><br><span class="line">&#123;</span><br><span class="line">    CATransition * animation = [CATransition animation];</span><br><span class="line">    animation.duration = 2.f;</span><br><span class="line">    animation.type = type;</span><br><span class="line">    animation.subtype = subtype;</span><br><span class="line">    animation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];</span><br><span class="line">    [self.view.layer addAnimation:animation forKey:nil];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)btnClick:(UIButton *)sender</span><br><span class="line">&#123;</span><br><span class="line">    UIButton * lastBtn;</span><br><span class="line">    NSInteger index = sender.tag - 100;</span><br><span class="line">    if (index &gt; 11)</span><br><span class="line">    &#123;</span><br><span class="line">        lastBtn = (UIButton *)[self.view viewWithTag:_subtype + 100];</span><br><span class="line">        [lastBtn setBackgroundImage:[self createImageWithColor:self.subtypeNormalColor] forState:UIControlStateNormal];</span><br><span class="line">        [sender setBackgroundImage:[self createImageWithColor:self.subtypeSelectedColor] forState:UIControlStateNormal];</span><br><span class="line">        _subtype = index;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        lastBtn = (UIButton *)[self.view viewWithTag:_transactionType + 100];</span><br><span class="line">        [lastBtn setBackgroundImage:[self createImageWithColor:self.typeNormalColor] forState:UIControlStateNormal];</span><br><span class="line">        [sender setBackgroundImage:[self createImageWithColor:self.typeSelectedColor] forState:UIControlStateNormal];</span><br><span class="line">        _transactionType = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    NSString * subtypeString ;</span><br><span class="line"></span><br><span class="line">    switch (_subtype % 4) &#123;</span><br><span class="line">        case 0:</span><br><span class="line">            subtypeString = kCATransitionFromTop;</span><br><span class="line">            break;</span><br><span class="line">        case 1:</span><br><span class="line">            subtypeString = kCATransitionFromBottom;</span><br><span class="line">            break;</span><br><span class="line">        case 2:</span><br><span class="line">            subtypeString = kCATransitionFromLeft;</span><br><span class="line">            break;</span><br><span class="line">        case 3:</span><br><span class="line">            subtypeString = kCATransitionFromRight;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    switch (_transactionType) &#123;</span><br><span class="line">        case CATransactionType_Fade:</span><br><span class="line">            [self CATransitionWithType:kCATransitionFade WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_MoveIn:</span><br><span class="line">            [self CATransitionWithType:kCATransitionMoveIn WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_Push:</span><br><span class="line">            [self CATransitionWithType:kCATransitionPush WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_Reveal:</span><br><span class="line">            [self CATransitionWithType:kCATransitionReveal WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case CATransactionType_Cube:</span><br><span class="line">            [self CATransitionWithType:@&quot;cube&quot; WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_SuckEffect:</span><br><span class="line">            [self CATransitionWithType:@&quot;suckEffect&quot; WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_OglFlip:</span><br><span class="line">            [self CATransitionWithType:@&quot;oglFlip&quot; WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_RippleEffect:</span><br><span class="line">            [self CATransitionWithType:@&quot;rippleEffect&quot; WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_PageCurl:</span><br><span class="line">            [self CATransitionWithType:@&quot;pageCurl&quot; WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_PageUnCurl:</span><br><span class="line">            [self CATransitionWithType:@&quot;pageUnCurl&quot; WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_CameraIrisHollowOpen:</span><br><span class="line">            [self CATransitionWithType:@&quot;cameraIrisHollowOpen&quot; WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line">        case CATransactionType_CameraIrisHollowClose:</span><br><span class="line">            [self CATransitionWithType:@&quot;cameraIrisHollowClose&quot; WithSubtype:subtypeString];</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static NSInteger i = 0;</span><br><span class="line">    self.bgView.image = i % 2 ? [UIImage imageNamed:@&quot;拉姆.jpeg&quot;] :[UIImage imageNamed:@&quot;蕾姆.jpeg&quot;];</span><br><span class="line">    i ++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="效果图-1"><a href="#效果图-1" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://upload-images.jianshu.io/upload_images/1487718-1a8800f104907166.gif?imageMogr2/auto-orient/strip" alt="CATransition1.gif"><br><img src="https://upload-images.jianshu.io/upload_images/1487718-1da95c682f270d71.gif?imageMogr2/auto-orient/strip" alt="CATransition2.gif"></p><hr><h2 id="CAAnimationGroup-动画组"><a href="#CAAnimationGroup-动画组" class="headerlink" title="CAAnimationGroup 动画组"></a>CAAnimationGroup 动画组</h2><p>&ensp;&ensp;&ensp;&ensp;分组动画在<code>CAAnimationGroup</code>实例指定的时间中运行。分组动画的持续时间不会被缩放到他们的<code>CAAnimationGroup</code>的持续时间。相反，动画被剪切到动画组的持续时间。例如，在一个动画组中分组的10秒动画，持续时间为5秒，只显示动画的前5秒。</p><h3 id="效果代码-2"><a href="#效果代码-2" class="headerlink" title="效果代码"></a>效果代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark - 一个红包雨的例子</span><br><span class="line">- (void)showRain</span><br><span class="line">&#123;</span><br><span class="line">    UIImageView * imageV = [UIImageView new];</span><br><span class="line">    imageV.image = [UIImage imageNamed:@&quot;page&quot;];</span><br><span class="line">    imageV.frame = CGRectMake(0, 0, 50 , 50 );</span><br><span class="line"></span><br><span class="line">    CALayer * layer = [CALayer layer];</span><br><span class="line">    layer.bounds = imageV.frame;</span><br><span class="line">    layer.contents = (id)imageV.image.CGImage;</span><br><span class="line">    layer.anchorPoint = CGPointMake(0, 0);</span><br><span class="line">    layer.position = CGPointMake(0, 0);</span><br><span class="line">    [self.view.layer addSublayer:layer];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [self addAnimationWithLayer:layer];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)addAnimationWithLayer:(CALayer *)layer</span><br><span class="line">&#123;</span><br><span class="line">    int height = [UIScreen mainScreen].bounds.size.height;</span><br><span class="line">    int width = [UIScreen mainScreen].bounds.size.height;</span><br><span class="line"></span><br><span class="line">    CAKeyframeAnimation * moveAnimation = [CAKeyframeAnimation animationWithKeyPath:@&quot;position&quot;];</span><br><span class="line">    NSValue * A = [NSValue valueWithCGPoint:CGPointMake(arc4random() % width, 0)];</span><br><span class="line">    NSValue * B = [NSValue valueWithCGPoint:CGPointMake(arc4random() % width, height + 100)];</span><br><span class="line">    moveAnimation.values = @[A,B];</span><br><span class="line">    moveAnimation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];</span><br><span class="line"></span><br><span class="line">    CAKeyframeAnimation * tranAnimation = [CAKeyframeAnimation animationWithKeyPath:@&quot;transform&quot;];</span><br><span class="line">    CATransform3D r0 = CATransform3DMakeRotation(M_PI/180 * (arc4random() % 360 ) , 0, 0, -1);</span><br><span class="line">    CATransform3D r1 = CATransform3DMakeRotation(M_PI/180 * (arc4random() % 360 ) , 0, 0, -1);</span><br><span class="line">    tranAnimation.values = @[[NSValue valueWithCATransform3D:r0],[NSValue valueWithCATransform3D:r1]];</span><br><span class="line">    tranAnimation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];</span><br><span class="line"></span><br><span class="line">    CAAnimationGroup * group = [[CAAnimationGroup alloc] init];</span><br><span class="line">    group.duration = arc4random() % 200 / 100.0 + 3.5;</span><br><span class="line">    group.fillMode = kCAFillModeForwards;</span><br><span class="line">    group.removedOnCompletion = NO;</span><br><span class="line">    group.animations = @[moveAnimation,tranAnimation];</span><br><span class="line">    [layer addAnimation:group forKey:nil];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果图-2"><a href="#效果图-2" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://upload-images.jianshu.io/upload_images/1487718-fbc767740432f20c.gif?imageMogr2/auto-orient/strip" alt="CAAnimationGroup.gif"></p><hr><h2 id="CASpringAnimation-弹簧动画"><a href="#CASpringAnimation-弹簧动画" class="headerlink" title="CASpringAnimation 弹簧动画"></a>CASpringAnimation 弹簧动画</h2><p>&ensp;&ensp;&ensp;&ensp;<code>CASpringAnimation</code>的父类是<code>CABasicAnimation</code>, <code>CABasicAnimation</code>可以看成是只有头尾有值的关键帧动画。</p><blockquote><p>You would typically use a spring animation to animate a layer’s position so that it appears to be pulled towards a target by a spring. The further the layer is from the target, the greater the acceleration towards it is.<br>CASpringAnimation allows control over physically based attributes such as the spring’s damping and stiffness.</p></blockquote><p>&ensp;&ensp;&ensp;&ensp;<code>CASpringAnimation</code>是基于物理的属性控制，比如弹簧的阻尼和刚度。</p><h3 id="重要属性-2"><a href="#重要属性-2" class="headerlink" title="重要属性"></a>重要属性</h3><table><thead><tr><th>属性</th><th style="text-align:center">描述 </th></tr></thead><tbody><tr><td>damping</td><td style="text-align:center">定义弹簧运动如何受到阻尼的影响</td></tr><tr><td>initialVelocity</td><td style="text-align:center">初速度</td></tr><tr><td>mass</td><td style="text-align:center">连接到弹簧末端的物体的质量</td></tr><tr><td>settlingDuration</td><td style="text-align:center">预估静止时间</td></tr><tr><td>stiffness</td><td style="text-align:center">弹簧刚度系数</td></tr></tbody></table><h3 id="效果代码-3"><a href="#效果代码-3" class="headerlink" title="效果代码"></a>效果代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">- (void)btnClick:(UIButton *)sender</span><br><span class="line">&#123;</span><br><span class="line">    //frame属性不可动画化 只能通过 bounds 和 position完成</span><br><span class="line">    CASpringAnimation * animation = [CASpringAnimation animationWithKeyPath:@&quot;bounds&quot;];</span><br><span class="line"></span><br><span class="line">    //质量，影响图层运动时的弹簧惯性，质量越大，弹簧拉伸和压缩的幅度越大</span><br><span class="line">    animation.mass = self.massSlider.value;</span><br><span class="line"></span><br><span class="line">    //刚度系数(劲度系数/弹性系数)，刚度系数越大，形变产生的力就越大，运动越快</span><br><span class="line">    animation.stiffness = self.stiffnessSlider.value;</span><br><span class="line"></span><br><span class="line">    //阻尼系数，阻止弹簧伸缩的系数，阻尼系数越大，停止越快</span><br><span class="line">    animation.damping = self.dampingSlider.value;</span><br><span class="line"></span><br><span class="line">    //初始速率，动画视图的初始速度大小;速率为正数时，速度方向与运动方向一致，速率为负数时，速度方向与运动方向相反</span><br><span class="line">    animation.initialVelocity = self.velocitySlider.value;</span><br><span class="line"></span><br><span class="line">    animation.duration = 3.f;</span><br><span class="line">    animation.fromValue =  [NSValue valueWithCGRect:CGRectMake(0, 0, 80, 100)];</span><br><span class="line">    animation.toValue = [NSValue valueWithCGRect:CGRectMake(0, 0, 80, 240)];</span><br><span class="line">    animation.removedOnCompletion = NO;</span><br><span class="line">    animation.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];</span><br><span class="line">    [self.baseView.layer addAnimation:animation forKey:nil];</span><br><span class="line"></span><br><span class="line">    CASpringAnimation * animation1 = [CASpringAnimation animationWithKeyPath:@&quot;position&quot;];</span><br><span class="line">    animation1.duration = 3.f;</span><br><span class="line">    animation1.fromValue = [NSValue valueWithCGPoint:CGPointMake(SCREENWIDTH / 2 , 250)];</span><br><span class="line">    animation1.toValue = [NSValue valueWithCGPoint:CGPointMake(SCREENWIDTH / 2 , 250 - 70)];</span><br><span class="line">    animation1.removedOnCompletion = NO;</span><br><span class="line">    animation1.fillMode = kCAFillModeForwards;</span><br><span class="line">    [self.baseView.layer addAnimation:animation1 forKey:nil];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果图-3"><a href="#效果图-3" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://upload-images.jianshu.io/upload_images/1487718-ae46d1313229aaa6.gif?imageMogr2/auto-orient/strip" alt="CASpringAnimation.gif"></p><hr><h3 id="UIView的弹簧动画"><a href="#UIView的弹簧动画" class="headerlink" title="UIView的弹簧动画"></a>UIView的弹簧动画</h3><p>另外在看看<code>cell</code>上用<code>UIView Block</code>弹簧动画的特效</p><h4 id="效果代码-4"><a href="#效果代码-4" class="headerlink" title="效果代码"></a>效果代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+ (void)animateWithDuration:(NSTimeInterval)duration</span><br><span class="line">                      delay:(NSTimeInterval)delay</span><br><span class="line">     usingSpringWithDamping:(CGFloat)dampingRatio</span><br><span class="line">      initialSpringVelocity:(CGFloat)velocity</span><br><span class="line">                    options:(UIViewAnimationOptions)options</span><br><span class="line">                 animations:(void (^)(void))animations</span><br><span class="line">                 completion:(void (^ __nullable)(BOOL finished))completion NS_AVAILABLE_IOS(7_0);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">- (void)cellAnimation</span><br><span class="line">&#123;</span><br><span class="line">    [self.springTableView reloadData];</span><br><span class="line"></span><br><span class="line">    NSArray * cellArrays = self.springTableView.visibleCells;</span><br><span class="line">    CGFloat height = self.springTableView.bounds.size.height;</span><br><span class="line"></span><br><span class="line">    for (UITableView * cell in cellArrays)</span><br><span class="line">    &#123;</span><br><span class="line">        cell.transform = CGAffineTransformMakeTranslation(-SCREENWIDTH, height);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for (NSInteger i = 0 ; i &lt; cellArrays.count ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        UITableViewCell * cell = (UITableViewCell *)cellArrays[i];</span><br><span class="line">        [UIView animateWithDuration:1.5</span><br><span class="line">                              delay:0.05 * i</span><br><span class="line">             usingSpringWithDamping:0.8</span><br><span class="line">              initialSpringVelocity:0</span><br><span class="line">                            options:0 animations:^&#123;</span><br><span class="line">                    cell.transform = CGAffineTransformMakeTranslation(0, 0);</span><br><span class="line">            &#125; completion:nil];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果图-4"><a href="#效果图-4" class="headerlink" title="效果图"></a>效果图</h4><p><img src="https://upload-images.jianshu.io/upload_images/1487718-0a62c12dc5195c94.gif?imageMogr2/auto-orient/strip" alt="CellSpringAnimation.gif"></p><p><a href="https://github.com/iOS-Misaki/CAAnimation"><strong>源码: CAAnimation</strong></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;有人问我为什么要写博客，必须要承认，现在网上一大推的优秀教程和现成的Demo，自己写的没有别人好，有些地方根本不够深入，但是看别人写文章、写代码和自己写完全是两件事，代码看看就能懂，但是自己过一遍，印象更深，消化的也就更彻底。对于iOS动画 ，一直都没有系统化的学习，只有用的时候才会查查api，之前写过一篇&lt;a href=&quot;https://www.jianshu.com/p/92ac22afeeef&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;红包雨&lt;/a&gt;的文章，用的是关键帧动画，没有在继续下去。另一个就是在6月份面试的时候，有两个面试官都问到了基础动画，当时也回答的不好，现在详细地梳理一遍。现阶段，先把&lt;code&gt;Core Animation&lt;/code&gt;弄清楚，以后再下沉到&lt;code&gt;OpenGL&lt;/code&gt;和&lt;code&gt;CoreGraphics&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
